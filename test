#include <iostream>
#include <cmath>
#include <cstdlib>
#include <cstring>

#include <opencv2/core/core.hpp>
#include <opencv2/highgui/highgui.hpp>

using namespace cv;
using namespace std;

void my_mouse_callback(int event, int x, int y, int flags, void* param);
void draw_box(Mat img, Rect rect);

bool destroy = false;
bool drawing_box = false;
Rect box;

int main()
{
	char* window_name = "Box";
	namedWindow(window_name);

	VideoCapture cap(0); // open the default camera
	if (!cap.isOpened())  // check if we succeeded
		return -1;

	while (1)
	{
		Mat frame;
		cap >> frame;         // get a new frame from camera
		imshow(window_name, frame);

		// Press 'esc' to escape
		if (waitKey(30) == '27') break;
	}
	box = Rect(0, 0, 1, 1);

	return 0;
}
void draw_box(Mat img, Rect rect)
{
	rectangle(img, Point(box.x, box.y), Point(box.x + box.width, box.y + box.height),Scalar(0, 0, 255), 2);
	Rect rect2 = Rect(box.x, box.y, box.width, box.height);
	//cvSetImageROI(image, rect2);   //here I wanted to set the drawn rect as ROI
}

void my_mouse_callback(int event, int x, int y, int flags, void* param)
{
	Mat frame;

	switch (event)
	{
	case CV_EVENT_MOUSEMOVE:
	{
							   if (drawing_box)
							   {
								   box.width = x - box.x;
								   box.height = y - box.y;
							   }
	}
		break;

	case CV_EVENT_LBUTTONDOWN:
	{
								 drawing_box = true;
								 box = cvRect(x, y, 0, 0);
	}
		break;

	case CV_EVENT_LBUTTONUP:
	{
							   drawing_box = false;
							   if (box.width < 0)
							   {
								   box.x += box.width;
								   box.width *= -1;
							   }

							   if (box.height < 0)
							   {
								   box.y += box.height;
								   box.height *= -1;
							   }

							   draw_box(frame, box);
	}
		break;

	case CV_EVENT_RBUTTONUP:
	{
							   destroy = true;
	}
		break;

	default:
		break;
	}
}


